const userData = localStorage.getItem('user');
const user = JSON.parse(userData);

if (user.role === 'guest') {
  document.getElementById('create-invitation').classList.add('hidden');
  document.getElementById('all-invitations').classList.add('hidden');
}

setDefaultValues();
getPrefilledValues();

function setDefaultValues() {
  if (user.academical_number && user.role === 'student') {
    document.getElementById('faculty-number').value = user.academical_number;
  }
}

function getFormData() {
  return {
    theme: document.getElementById('theme').value,
    presentationDate: document.getElementById('presentation-date').value,
    presentationTime: document.getElementById('presentation-time').value,
    facultyNumber: document.getElementById('faculty-number').value,
    description: document.getElementById('description').value,
  };
}

document
  .getElementById('create-invitation')
  .addEventListener('submit', event => {
    event.preventDefault();
    const autoGenerated = document
      .getElementById('meme-generator')
      .classList.contains('hidden');

    const data = {
      ...getFormData(),
      autoGenerated,
      image: memeURL,
    };
    addInvitation(data).then(response => {
      if (response.success) {
        location.replace('../invitations/invitations.html');
      } else {
        document.getElementById('error').innerHTML = response.error;
      }
    });
  });

async function addInvitation(data) {
  const response = await fetch(
    '../../backend/endpoints/create-invitation.php',
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    }
  );

  const result = await response.json();
  return result;
}

async function getInvitation() {
  const data = {
    userId: user.id,
  };

  const response = await fetch('../../backend/endpoints/get-invitation.php', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data),
  });

  const result = await response.json();
  return result;
}

function getPrefilledValues() {
  getInvitation().then(invitation => {
    const { presentation_theme, date, time, description } = JSON.parse(
      invitation.data
    );
    document.getElementById('presentation-date').value = date;
    document.getElementById('presentation-time').value = time;
    document.getElementById('theme').value = presentation_theme;
    document.getElementById('description').value = description;
  });
}
